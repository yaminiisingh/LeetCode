/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(head==null|| head.next==null) return null;
        
        ListNode fast= head.next.next;
        ListNode slow= head.next;
        while(fast!=null &&fast.next!=null && (fast!=slow)){
            fast= fast.next.next;
            slow= slow.next;
        }
        
        if(fast==null || fast.next== null) return null; //No cycle
        
        slow= head;
            while(fast!=slow){
                slow= slow.next;
                fast= fast.next;
            }
           
        return slow;
        
    }
}
